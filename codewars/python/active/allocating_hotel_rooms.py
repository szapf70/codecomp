# https://www.codewars.com/kata/6638277786032a014d3e0072/train/python
# Allocating Hotel Rooms

class room():
    def __init__(self,booking):
        self.books = [booking]

    def book(self,booking):
        if self.books[0][0] > booking[1]:
            self.books.insert(0,booking)
            return True
        if self.books[-1][1] < booking[0]:
            self.books.append(booking)
            return True
        for i in range(0,len(self.books)-1):
            if self.books[i][1] < booking[0] and booking[1] < self.books[i+1][0]:
                self.books.insert(i+1,booking)
                return True
        return False               


def allocate_rooms(customers):
    rooms = []
    res = []

    for c in customers:
        booked = False
        if rooms == []:
            rooms.append(room(c))
            res.append(1)
            continue
        for n,r in enumerate(rooms,start=1):
            if r.book(c):
                res.append(n)
                booked = True
                break
        if not booked:
            rooms.append(room(c))
            res.append(len(rooms))    

    return res


print(allocate_rooms([(1,2),(2,4),(4,4)]))
print(allocate_rooms([(1,5),(2,4),(6,8),(7,7)]))
print(allocate_rooms([(15,22),(2,4),(6,9),(3,33),(12,21)]))

bt = [(68, 157), (73, 166), (75, 128), (21, 55), (43, 52), (87, 179), (36, 45), (55, 92), (64, 104), (35, 56), (4, 46), (100, 162), (86, 117), (49, 90), (72, 110), (32, 112), (76, 109), (82, 130), (73, 99), (97, 136), (59, 125), (77, 130), (28, 72), (84, 147), (19, 58), (15, 107), (33, 107), (50, 127), (65, 131), (45, 136), (51, 96), (5, 60), (76, 142), (68, 124), (3, 81), (26, 87), (38, 64), (38, 93), (58, 112), (81, 141), (80, 123), (64, 150), (73, 131), (81, 163), (90, 156), (63, 91), (46, 95), (25, 33), (17, 44), (59, 68), (16, 97), (56, 136), (77, 92), (62, 133), (29, 89), (64, 142), (68, 164), (86, 184), (91, 167), (81, 151), (31, 116), (42, 131), (8, 12), (32, 110), (7, 64), (15, 29), (12, 50), (44, 68), (20, 73), (11, 59), (74, 153), (12, 52), (24, 88), (23, 36), (49, 149), (27, 93), (24, 95), (19, 42), (76, 140), (42, 69), (2, 81), (34, 35), (30, 70), (52, 95), (57, 120), (56, 124), (58, 137), (33, 66), (58, 84), (86, 140), (19, 105), (99, 193), (100, 136), (93, 183), (83, 155), (68, 107), (70, 86), (12, 32), (65, 149), (49, 140), (47, 123), (30, 69), (42, 128), (27, 51), (38, 127), (78, 131), (48, 65), (17, 39), (14, 56), (7, 99), (44, 79), (75, 132), (68, 159), (1, 73), (35, 104), (65, 70), (33, 131), (13, 73), (18, 107), (75, 164), (12, 55), (18, 58), (60, 62), (38, 84), (80, 137), (29, 118), (66, 75), (98, 148), (30, 52), (99, 162), (89, 146), (96, 144), (97, 176), (7, 43), (73, 146), (44, 84), (48, 48), (67, 162), (4, 83), (50, 78), (21, 32), (86, 110), (35, 125), (6, 36), (97, 134), (59, 107), (82, 159), (57, 87), (75, 175), (19, 92), (53, 129), (61, 125), (60, 61), (35, 82), (46, 89), (52, 112), (78, 132), (92, 180), (43, 68), (77, 83), (40, 114), (94, 130), (8, 89), (45, 72), (64, 76), (73, 125), (39, 65), (95, 132), (99, 121), (36, 57), (99, 170), (40, 55), (100, 107), (27, 55), (46, 49), (22, 116), (43, 47), (90, 138), (64, 77), (58, 99), (91, 132), (84, 84), (100, 149), (57, 81), (9, 96), (86, 89), (65, 140), (64, 138), (91, 100), (68, 71), (95, 123), (39, 80), (75, 120), (8, 107), (99, 199), (24, 120), (15, 51), (69, 109), (46, 54), (49, 96), (66, 122), (69, 129), (91, 113), (34, 68), (56, 143), (2, 62), (57, 144), (66, 161), (89, 163), (46, 135), (66, 157), (100, 109), (59, 90), (24, 85), (64, 144), (68, 168), (33, 34), (15, 81), (100, 153), (57, 119), (79, 136), (35, 52), (73, 142), (83, 175), (96, 174), (16, 29), (88, 108), (15, 112), (20, 75), (61, 105), (100, 172), (54, 111), (41, 133), (1, 58), (45, 87), (34, 72), (58, 76), (66, 113), (87, 171), (55, 91), (2, 2), (68, 110), (26, 36), (74, 149), (13, 74), (77, 122), (71, 151), (11, 50), (19, 60), (78, 84), (51, 107), (62, 112), (39, 84), (70, 165), (38, 69), (93, 114), (85, 175), (66, 135), (62, 114), (67, 136), (78, 160), (72, 107), (79, 140), (46, 46), (95, 177), (96, 116), (82, 83), (13, 96), (69, 79), (32, 114), (89, 143), (88, 186), (50, 76), (5, 15), (77, 176), (30, 31), (57, 82), (26, 65), (21, 94), (69, 152), (64, 147), (10, 104), (94, 161), (8, 56), (89, 159), (85, 138), (37, 134), (43, 132), (39, 48), (75, 81), (1, 80), (10, 32), (93, 156), (1, 98), (84, 141), (84, 114), (99, 167), (57, 116), (56, 74), (33, 96), (85, 99), (71, 105), (82, 175), (20, 104), (46, 116), (34, 54), (47, 145), (9, 36), (86, 158), (91, 125), (23, 67), (79, 141), (95, 149), (42, 127), (48, 142), (71, 156), (64, 113), (7, 96), (11, 107), (58, 129), (16, 30)]

erg = allocate_rooms(bt)
print(max(erg))